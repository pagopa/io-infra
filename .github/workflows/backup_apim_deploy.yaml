name: APIM Migration

on:
  workflow_dispatch:
    inputs:
      backup_name:
        description: 'Name of the backup to restore'
        required: false
        type: string

env:
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  STORAGE_ACCOUNT_RG: "io-p-rg-internal"
  STORAGE_ACCOUNT_NAME: "iopapimbackupst01"
  STORAGE_ACCOUNT_CONTAINER_NAME: "apim-backups"

jobs:
  svcappservices:
    name: 'Stop SVC Apps'
    runs-on: ubuntu-latest
    environment: prod-apim
    permissions:
      id-token: write
      contents: read
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Azure Login
        uses: azure/login@a65d910e8af852a8061c627c456678983e180302
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: Stop Test AppService
        run: |
          az webapp stop \
            --name "io-d-test-apimmigration-app-01" \
            --resource-group "dev-andreag"

      - name: Stop Test AppService - staging
        run: |
          az webapp stop \
            --name "io-d-test-apimmigration-app-01" \
            --resource-group "dev-andreag" \
            --slot "staging"

      # - name: Stop SVC Backoffice
      #   run: |
      #     az webapp stop \
      #       --name "io-p-itn-svc-bo-app-01" \
      #       --resource-group "io-p-itn-svc-rg-01"

      # - name: Stop SVC DevPortal
      #   run: |
      #     az webapp stop \
      #       --name "io-p-app-devportal-be" \
      #       --resource-group "io-p-selfcare-be-rg"

      # - name: Stop SVC CMS Functions
      #   run: |
      #     az functionapp config appsettings set \
      #       --name "io-p-itn-svc-cms-func-01" \
      #       --resource-group "io-p-itn-svc-rg-01" \
      #       --settings AzureWebJobs.CreateService.Disabled=true AzureWebJobs.RegenerateServiceKeys.Disabled=true

      - name: Stop Test Functions
        run: |
          az functionapp config appsettings set \
            --name "io-d-test-apimmigration-func-02" \
            --resource-group "dev-andreag" \
            --settings AzureWebJobs.TraceHeaders.Disabled=true AzureWebJobs.EnvVar.Disabled=false

      - name: Stop Test Functions - staging
        run: |
          az functionapp config appsettings set \
            --name "io-d-test-apimmigration-func-02" \
            --resource-group "dev-andreag" \
            --settings AzureWebJobs.TraceHeaders.Disabled=true AzureWebJobs.EnvVar.Disabled=false \
            --slot "staging"

  backup:
    name: 'Backup APIM'
    runs-on: self-hosted
    environment: prod-apim
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.backup_name == ''
    needs: [svcappservices]
    timeout-minutes: 90
    permissions:
      id-token: write
      contents: read
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      backup-name: ${{ steps.backup_name.outputs.backup_name }}

    steps:
      - name: Azure Login
        uses: azure/login@a65d910e8af852a8061c627c456678983e180302
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: Get current timestamp
        id: backup_name
        run: |
          NOW="$(date +'%Y-%m-%dT%H:%M:%S')"
          echo "backup_name=backup_$NOW" >> $GITHUB_ENV

      - name: APIM Backup
        if: ${{ inputs}}
        run: |
          set -e

          key=$(az storage account keys list \
            --resource-group ${{ env.STORAGE_ACCOUNT_RG }} \
            --account-name ${{ env.STORAGE_ACCOUNT_NAME }} \
            --query [0].value -o tsv)

          echo "--- DEBUG ---"
          echo "$backup_name"

          az apim backup \
            --backup-name "$backup_name" \
            --container-name "${{ env.STORAGE_ACCOUNT_CONTAINER_NAME }}" \
            --name "io-p-apim-v2-api" \
            --resource-group "io-p-rg-internal" \
            --storage-account-key "$key" \
            --storage-account-name "${{ env.STORAGE_ACCOUNT_NAME }}"

  restore:
    name: 'Restore APIM backup'
    runs-on: self-hosted
    environment: prod-apim
    timeout-minutes: 90
    needs: backup
    if: always() && (needs.backup.result == 'success' || needs.backup.result == 'skipped')
    permissions:
      id-token: write
      contents: read
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      APIM_BACKUP_NAME: ${{ github.event.inputs.backup_name != '' && github.event.inputs.backup_name || needs.backup.outputs.backup-name }}

    steps:
      - name: Azure Login
        uses: azure/login@a65d910e8af852a8061c627c456678983e180302
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: APIM Restore
        run: |
          set -e

          key=$(az storage account keys list \
            -g ${{ env.STORAGE_ACCOUNT_RG }} \
            -n ${{ env.STORAGE_ACCOUNT_NAME }} \
            --query [0].value -o tsv)

          echo "--- DEBUG ---"
          echo "${{ env.APIM_BACKUP_NAME }}"

          az apim restore \
            --backup-name "${{ env.APIM_BACKUP_NAME }}" \
            --container-name "${{ env.STORAGE_ACCOUNT_CONTAINER_NAME }}" \
            --name "io-p-itn-apim-01" \
            --resource-group "io-p-itn-common-rg-01" \
            --storage-account-key "$key" \
            --storage-account-name "${{ env.STORAGE_ACCOUNT_NAME }}"
