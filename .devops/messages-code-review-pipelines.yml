pr:
  autoCancel: false
  branches:
    include:
      - main
  paths:
    include:
      - 'src/domains/messages-app'
      - 'src/domains/messages-common'

parameters:
  - name: 'PROD'
    displayName: 'Run on PROD environment'
    type: boolean
    default: True
    values:
      - False
      - True

variables:
  TIME_OUT: 10
  PROD01_AKS_APISERVER_URL: '$(TF_PROD01_AKS_APISERVER_URL)'
  PROD01_AKS_AZURE_PRODOPS_SA_CACRT: '$(TF_PROD01_AKS_AZURE_PRODOPS_SA_CACRT)'
  PROD01_AKS_AZURE_PRODOPS_SA_TOKEN: '$(TF_PROD01_AKS_AZURE_PRODOPS_SA_TOKEN)'
  AKS_PROD_NAME: '$(TF_AKS_PROD_NAME)'

pool:
  vmImage: 'ubuntu-20.04'

resources:
  repositories:
    - repository: terraform
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v2.4.0
      endpoint: 'io-azure-devops-github-ro'

stages:
  - stage: tf_plan_common
    dependsOn: []
    condition: and(succeeded(), eq(${{parameters.PROD}}, true))
    pool:
      name: io-prod-linux
    jobs:
      - job: tf_plan_messages_common
        strategy:
          parallel: 1
        timeoutInMinutes: $[variables.TIME_OUT]
        steps:
          - checkout: self
          # 1. Install terraform and terragrunt
          - template: templates/terraform-setup/template.yaml@terraform
          # 2. Run terraform plan messages-common
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              ENVIRONMENT: "prod"
              WORKINGDIR: 'src/domains/messages-common'
              AZURE_SERVICE_CONNECTION_NAME: PROD-IO-SERVICE-CONN

  - stage: tf_plan_app
    dependsOn: [tf_plan_common]
    condition: and(succeeded(), eq(${{parameters.PROD}}, true))
    pool:
      name: io-prod-linux
    jobs:
      - job: tf_plan_messages_app
        timeoutInMinutes: $[variables.TIME_OUT]
        strategy:
          parallel: 1
        steps:
          - checkout: self
          # 1. Install terraform and terragrunt
          - template: templates/terraform-setup/template.yaml@terraform
          # Run terraform plan messages-app
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              ENVIRONMENT: "prod"
              WORKINGDIR: 'src/domains/messages-app'
              AZURE_SERVICE_CONNECTION_NAME: PROD-IO-SERVICE-CONN
              AKS_NAME: ${{ variables.AKS_PROD_NAME }}
              AKS_API_SERVER_URL: ${{ variables.PROD01_AKS_APISERVER_URL }}
              AKS_AZURE_PRODOPS_SA_CA_CRT: ${{ variables.PROD01_AKS_AZURE_PRODOPS_SA_CACRT }}
              AKS_AZURE_PRODOPS_SA_TOKEN: ${{ variables.PROD01_AKS_AZURE_PRODOPS_SA_TOKEN }}
