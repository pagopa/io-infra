openapi: 3.0.1
info:
  version: 1.0.1
  title: IO Lollipop Function Lollipop Consumer API
  x-logo:
    url: https://io.italia.it/assets/img/io-logo-blue.svg
  description: >
    Documentation of the IO Lollipop Function API exposed to Lollipop
    Consumerhere.
servers:
  - url: https://api.pagopa.it/api/v1/lollipop
security:
  - ApiKeyAuth: []
paths:
  /assertions/{assertion_ref}:
    get:
      operationId: getAssertion
      summary: Get Assertion related to a give assertion ref
      parameters:
        - name: assertion_ref
          required: true
          in: path
          schema:
            $ref: "#/components/schemas/AssertionRef"
        - $ref: "#/components/parameters/LollipopAuth"
      responses:
        "200":
          description: The assertion related to a valid assertion_ref
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LCUserInfo"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
        "410":
          description: Assertion gone
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemJson"
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Ocp-Apim-Subscription-Key
  parameters:
    LollipopAuth:
      name: x-pagopa-lollipop-auth
      required: true
      in: header
      schema:
        $ref: "#/components/schemas/LollipopAuthBearer"
      example: >-
        Bearer
        eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
  schemas:
    ProblemJson:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: >-
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence

            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 200
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          format: uri
          description: >-
            An absolute URI that identifies the specific occurrence of the
            problem.

            It may or may not yield further information if dereferenced.
    AssertionType:
      type: string
      enum:
        - SAML
        - OIDC
    AssertionRefSha256:
      type: string
      pattern: ^(sha256-[A-Za-z0-9-_=]{1,44})$
    AssertionRefSha384:
      type: string
      pattern: ^(sha384-[A-Za-z0-9-_=]{1,66})$
    AssertionRefSha512:
      type: string
      pattern: ^(sha512-[A-Za-z0-9-_=]{1,88})$
    AssertionRef:
      oneOf:
        - $ref: "#/components/schemas/AssertionRefSha256"
        - $ref: "#/components/schemas/AssertionRefSha384"
        - $ref: "#/components/schemas/AssertionRefSha512"
    LollipopAuthBearer:
      type: string
      pattern: ^Bearer [a-zA-Z0-9-_].+
      description: A lollipop's JWT auth custom header as `Bearer <JWT Token>`
    SamlUserInfo:
      type: object
      properties:
        response_xml:
          type: string
          description: A string representation of a signed SPID/CIE response
          minLength: 1
      required:
        - response_xml
    OidcSignedJwt:
      type: string
      description: A JWT representation of a signed SPID/CIE OIDC Idp
      minLength: 1
    OidcUserInfo:
      type: object
      properties:
        id_token:
          $ref: "#/components/schemas/OidcSignedJwt"
        claims_token:
          $ref: "#/components/schemas/OidcSignedJwt"
      required:
        - id_token
        - claims_token
    LCUserInfo:
      oneOf:
        - $ref: "#/components/schemas/SamlUserInfo"
        - $ref: "#/components/schemas/OidcUserInfo"
